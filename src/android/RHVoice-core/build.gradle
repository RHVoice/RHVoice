apply plugin: 'com.android.application'

ext.lifecycle_version = "2.4.1"

ext.major_version=1
ext.minor_version=9
ext.revision_number=0
ext.baseVersionCode = 100000 * major_version + 1000 * minor_version + 10 * revision_number

ext.base_pkg_dir_url='https://rhvoice.org/download/packages-%s.json'
ext.pkg_dir_url_def_fmt=/-DPKG_DIR_URL="\"%s\""/

task BoostIncludes(type: Exec) {
     workingDir '../../..'
     commandLine 'scons', 'external/libs/boost/include/boost'
}

android {
compileOptions {
coreLibraryDesugaringEnabled true
sourceCompatibility JavaVersion.VERSION_11
targetCompatibility JavaVersion.VERSION_11
}

compileSdkVersion myCompileSdkVersion

buildFeatures {
prefab true
}

defaultConfig {
multiDexEnabled true
minSdkVersion myMinSdkVersion
targetSdkVersion myTargetSdkVersion
applicationId "com.github.olga_yakovleva.rhvoice.android"
versionName "${major_version}.${minor_version}.${revision_number}"
ndk{
abiFilters 'armeabi-v7a', 'x86', 'arm64-v8a', 'x86_64'
}
ndkVersion "23.1.7779620"
externalNativeBuild {
ndkBuild {
arguments 'V=1'
          cppFlags = ['-fexceptions', '-frtti', '-std=c++11']
}
}
}

if(rootProject.signRelease) {
signingConfigs {
release {
storeFile file(rootProject.property("RHVoice.keyStore"))
storePassword rootProject.property("RHVoice.keyStorePassword")
keyAlias rootProject.property("RHVoice.keyAlias")
keyPassword rootProject.property("RHVoice.keyPassword")
}
}
}

externalNativeBuild {
ndkBuild {
path 'src/main/jni/Android.mk'
}
}

buildTypes {
release {
if(rootProject.signRelease) {
signingConfig signingConfigs.release
}
minifyEnabled true
shrinkResources true
proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
}
debug {
minifyEnabled true
shrinkResources true
proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
}
}

flavorDimensions 'dir'

                 productFlavors {
                 stable {
                 dimension 'dir'
                 versionCode = baseVersionCode
}

        alpha {
        dimension 'dir'
        versionCode = baseVersionCode + 5
        versionNameSuffix '-alpha'
        externalNativeBuild {
        ndkBuild {
        cppFlags+=[sprintf(pkg_dir_url_def_fmt, sprintf(base_pkg_dir_url, "latest"))]
        }
        }
                }

        dev {
        dimension 'dir'
        versionCode = baseVersionCode + 9
        versionNameSuffix '-dev'
        externalNativeBuild {
        ndkBuild {
        cppFlags+=[sprintf(pkg_dir_url_def_fmt, findProperty('RHVoice.devPkgDirUrl')?:sprintf(base_pkg_dir_url, "dev"))]
        }
        }
                }
}
}

dependencies {
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.work:work-runtime:2.7.1'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'org.conscrypt:conscrypt-android:2.5.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation "androidx.documentfile:documentfile:1.0.1"
    implementation 'com.google.guava:guava:31.1-android'
implementation("com.squareup.moshi:moshi:1.13.0")
implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
implementation 'com.android.ndk.thirdparty:curl:7.79.1-beta-1'
implementation 'com.android.ndk.thirdparty:openssl:1.1.1l-beta-1'
implementation 'com.google.android.exoplayer:exoplayer-core:2.17.1'
coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
}

preBuild.dependsOn BoostIncludes
